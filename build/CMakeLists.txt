cmake_minimum_required(VERSION 3.5)

file(READ "../bin/package_name.txt" PACKAGE_NAME)
project("${PACKAGE_NAME}")

set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wpedantic -std=c++17")
if(__NDEBUG__)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -D__NDEBUG__")
endif(__NDEBUG__)
set(CMAKE_CXX_FLAGS_DEBUG "-ggdb3 -O0")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")

# set(SOURCE_DIR "${PROJECT_SOURCE_DIR}/../src/")
set(HEADER_DIR "${PROJECT_SOURCE_DIR}/../include/")
set(LIB_DIR "${PROJECT_SOURCE_DIR}/../lib/")
set(BIN_DIR "${PROJECT_SOURCE_DIR}/../bin/")

list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/ast/front_ast.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/ast/front_symt.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/ast/interm_ast.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/ast/back_ast.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/ast/ast.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/ast/back_symt.cpp")
#list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/backend/emitter/att_code.cpp")
#list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/backend/assembly/asm_gen.cpp")
#list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/backend/assembly/stack_fix.cpp")
#list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/backend/assembly/symt_cvt.cpp")
#list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/backend/assembly/registers.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/frontend/intermediate/names.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/frontend/intermediate/semantic.cpp")
#list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/frontend/intermediate/tac_repr.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/frontend/parser/parser.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/frontend/parser/preced.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/frontend/parser/lexer.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/util/error.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/util/fileio.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/util/str2t.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/util/pprint.cpp")
list(APPEND SOURCE_FILES "${PROJECT_SOURCE_DIR}/../src/main.cpp")

# file(GLOB_RECURSE SOURCE_FILES "${SOURCE_DIR}/*.cpp")
file(GLOB_RECURSE HEADER_FILES "${HEADER_DIR}/*.hpp" "${LIB_DIR}/*.hpp" "${LIB_DIR}/*.h")

add_executable(${PROJECT_NAME} ${SOURCE_FILES})
target_include_directories(${PROJECT_NAME} PRIVATE ${HEADER_DIR} ${LIB_DIR})
set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${BIN_DIR})
