#include <memory>

#include "ast/interm_ast.hpp"

#include "optimization/optim_tac.hpp"

static std::unique_ptr<OptimTacContext> context;

OptimTacContext::OptimTacContext(int32_t optim_1_mask) :
    is_fixed_point(true), enabled_optimizations({
                              (optim_1_mask & 2 << 0) > 0, // Constant folding
                              (optim_1_mask & 2 << 1) > 0, // Copy propagation
                              (optim_1_mask & 2 << 2) > 0, // Unreachable code elimination
                              (optim_1_mask & 2 << 3) > 0  // Dead store elimination
                          }) {}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Three address code optimization

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Constant folding

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Copy propagation

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Unreachable code elimination

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Dead store elimination

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void three_address_code_optimization(TacProgram* node, int32_t optim_1_mask) {
    context = std::make_unique<OptimTacContext>(optim_1_mask);
    context.reset();
}
