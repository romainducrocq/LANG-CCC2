cdef AsmOperand lower_bound_si = AsmImm(TIdentifier("0"), False)
cdef AsmOperand src = generate_operand(node.src)
cdef AssemblyType assembly_type_si = QuadWord()
cdef AsmCondCode cond_code_l = AsmL()
cdef TIdentifier target_out_of_range = represent_label_identifier("si2sd_out_of_range")
cdef AsmOperand dst = generate_operand(node.dst)
cdef TIdentifier target_after = represent_label_identifier("si2sd_after")
cdef AsmOperand dst_out_of_range_si = generate_register(REGISTER_KIND.get('Ax'))
cdef AsmOperand dst_out_of_range_si_shr = generate_register(REGISTER_KIND.get('Dx'))
cdef AsmUnaryOp unary_op_out_of_range_si_shr = AsmShr()
cdef AsmOperand set_bit_si = AsmImm(TIdentifier("1"), False)
cdef AsmBinaryOp binary_op_out_of_range_si_and = AsmBitAnd()
cdef AsmBinaryOp binary_op_out_of_range_si_or = AsmBitOr()
cdef AssemblyType assembly_type_sq = BackendDouble()
cdef AsmBinaryOp binary_op_out_of_range_sq_add = AsmAdd()
instructions.append(AsmCmp(assembly_type_si, lower_bound_si, src))
instructions.append(AsmJmpCC(cond_code_l, target_out_of_range))
instructions.append(AsmCvtsi2sd(assembly_type_si, src, dst))
instructions.append(AsmJmp(target_after))
instructions.append(AsmLabel(target_out_of_range))
instructions.append(AsmMov(assembly_type_si, src, dst_out_of_range_si))
instructions.append(AsmMov(assembly_type_si, dst_out_of_range_si, dst_out_of_range_si_shr))
instructions.append(AsmUnary(unary_op_out_of_range_si_shr, assembly_type_si, dst_out_of_range_si_shr))
instructions.append(AsmBinary(binary_op_out_of_range_si_and, assembly_type_si, set_bit_si, dst_out_of_range_si))
instructions.append(AsmBinary(binary_op_out_of_range_si_or, assembly_type_si, dst_out_of_range_si, dst_out_of_range_si_shr))
instructions.append(AsmCvtsi2sd(assembly_type_si, dst_out_of_range_si_shr, dst))
instructions.append(AsmBinary(binary_op_out_of_range_sq_add, assembly_type_sq, dst, dst))
instructions.append(AsmLabel(target_after))